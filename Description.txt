Steps to build the pipeline:
1. Creating a Github repository and cloning it in our local machine.
2. Adding a src folder in the local machine and then adding all the individual ML pipeline components in it for modular coding.

In this video we will mostly focus on building our ML pipeline, here is the basic layout:
Data Ingestion -> Data Preprocessing -> Feature Engineering -> Model Training -> Model Evaluation

We will use spacy to tokenize the string present in the text column of our dataset, we know that the data is present in english
language therefore we need to run this command in our environment first:
"python -m spacy download en_core_web_sm"
This will download the en core model for spacy.

3. Adding the data models and reports to the gitignore file.

We will create a dvc pipeline without parameters at first to check if everything is working smoothly.
Now we have added our modular coding files on github, the next step is:
4. Create dvc.yaml file and add stages to it.

Now that we have created a dvc.yaml file, we will need to initialise dvc to run the pipeline through dvc.

5. Initialise dvc using "dvc init" 
6. To run the pipeline using dvc, we will run "dvc repro" in the terminal. This will automatically run the dvc.yaml file and the stages we have defined in it.
7. Execute "dvc dag" to get a visual representation of the blocks run by dvc pipeline. (It gives a directed acyclic graph output)

IMPORTANT
** If we change code in one of the files, example if we make changes in the feature_engineering.py file, then dvc will not run the data_ingestion and data_preprocessing files, this is 
because these files are present before the feature_engineering file in the pipeline and therefore no need to run them again as we have changed the pipeline from feature_engineering. **

Now we are going to change the dvc pipeline and make it with parameters.
This is really important because we might have a lot of configurable parameters for eg 50, we cannot go in our code and make changes manually to 50 places, instead we will create a 
dvc pipeline with parameters.

8. Creating dvc pipeline with parameters.
9. Add params.yaml file.
10. Add params setup.